{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","tasks","setTasks","useState","input","setInput","React","createElement","style","padding","value","onChange","e","target","placeholder","map","task","index","key","onClick","newTasks","filter","_","i","removeTask","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"+JAkCeA,MAjCf,WACE,MAAOC,EAAOC,GAAYC,mBAAS,KAC5BC,EAAOC,GAAYF,mBAAS,IAWnC,OACEG,IAAAC,cAAA,OAAKC,MAAO,CAAEC,QAAS,KACrBH,IAAAC,cAAA,UAAI,iBACJD,IAAAC,cAAA,SACEG,MAAON,EACPO,SAAWC,GAAMP,EAASO,EAAEC,OAAOH,OACnCI,YAAY,eAGdR,IAAAC,cAAA,UACGN,EAAMc,IAAI,CAACC,EAAMC,IAChBX,IAAAC,cAAA,MAAIW,IAAKD,GACND,EAAK,IAACV,IAAAC,cAAA,UAAQY,QAASA,IAhBdF,KAClB,MAAMG,EAAWnB,EAAMoB,OAAO,CAACC,EAAGC,IAAMA,IAAMN,GAC9Cf,EAASkB,IAc6BI,CAAWP,IAAQ,UCd9CQ,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAhB,EAAA,GAAAiB,KAAAD,EAAAE,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHnC,IAAAC,cAACD,IAAMoC,WAAU,KACfpC,IAAAC,cAACP,EAAG,QAORyB","file":"static/js/main.ea5dd808.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [input, setInput] = useState(\"\");\n  // const addTask = () => {\n  //   if (input.trim() !== \"\") {\n  //     setTasks([...tasks, input]);\n  //     setInput(\"\");\n  //   }\n  // };\n  const removeTask = (index) => {\n    const newTasks = tasks.filter((_, i) => i !== index);\n    setTasks(newTasks);\n  };\n  return (\n    <div style={{ padding: 20 }}>\n      <h1>My To-Do List</h1>\n      <input\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        placeholder=\"Enter task\"\n      />\n      {/* <button onClick={addTask}>Add</button> */}\n      <ul>\n        {tasks.map((task, index) => (\n          <li key={index}>\n            {task} <button onClick={() => removeTask(index)}>X</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}